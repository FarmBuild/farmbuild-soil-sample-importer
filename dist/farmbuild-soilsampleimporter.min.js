"use strict";angular.module("farmbuild.soilSampleImporter",["farmbuild.core","farmbuild.farmdata"]).factory("soilSampleImporter",function(soilSampleImporterSession,soilSampleConverter,soilSampleValidator,farmdata,validations,googleAnalyticsImporter,$log){var soilSampleImporter={farmdata:farmdata},_isDefined=(validations.isPositiveNumber,validations.isDefined);return soilSampleImporter.version="0.1.0",soilSampleImporter.ga=googleAnalyticsImporter,soilSampleImporter.session=soilSampleImporterSession,$log.info("Welcome to Soil Sample Importer... this should only be initialised once! why we see twice in the example?"),soilSampleImporter.find=function(){return soilSampleImporterSession.find()},soilSampleImporter.load=function(inputFarmData){var loaded=farmdata.load(inputFarmData);return $log.info("loaded "+JSON.stringify(loaded,null,"  ")),_isDefined(loaded)?(loaded.hasOwnProperty("soils")||(loaded.soils={}),loaded.soils.hasOwnProperty("sampleResults")||(loaded.soils.sampleResults=soilSampleImporter.createDefault(),loaded=farmdata.update(loaded)),loaded):void 0},soilSampleImporter["export"]=soilSampleImporterSession["export"],soilSampleImporter.toFarmData=soilSampleConverter.toFarmData,soilSampleImporter.createDefault=soilSampleConverter.createDefault,soilSampleImporter.isValidFarmDataWithSoilSample=soilSampleValidator.isValidFarmDataWithSoilSample,"undefined"==typeof window.farmbuild?window.farmbuild={soilSampleImporter:soilSampleImporter}:window.farmbuild.soilSampleImporter=soilSampleImporter,soilSampleImporter}),angular.module("farmbuild.soilSampleImporter").factory("soilSampleConverter",function($log,farmdata,validations,soilSampleValidator,soilSampleImporterSession){function createDefault(){return{dateLastUpdated:new Date,results:{columnHeaders:[],rows:[]},importFieldDictionary:{},paddockRowDictionary:{},paddockNameColumn:void 0}}function toFarmData(farmData,newSampleResults){if(!_isDefined(farmData))return void 0;if(!_isDefined(newSampleResults))return void 0;if(!soilSampleValidator.isValidSoilSampleResult(newSampleResults))return void 0;var currentSoils={};_isDefined(farmData.soils)&&(currentSoils=farmData.soils);var currentPaddocks=farmData.paddocks;if(!_isDefined(currentPaddocks))return void 0;$log.info("before loop");var farmDataSampleResults={},newResults=newSampleResults.results,newImportFieldDictionary=newSampleResults.importFieldDictionary,importFieldNames=[];importFieldNames=Object.keys(newImportFieldDictionary),$log.info("importFields  "+importFieldNames.length),farmDataSampleResults.dateLastUpdated=newSampleResults.dateLastUpdated,farmDataSampleResults.importFieldNames=importFieldNames,currentSoils.sampleResults=farmDataSampleResults;for(var rows=newResults.rows,paddockRowDictionary=newSampleResults.paddockRowDictionary,i=0;i<currentPaddocks.length;i++){var singlePaddock=currentPaddocks[i],paddockRows=paddockRowDictionary[singlePaddock.name];if(_isDefined(paddockRows)&&_isArray(paddockRows)){var singlePaddockSoils=[];if($log.info("singlePaddockSoils "+paddockRows),0!=paddockRows.length){for(var k=0;k<paddockRows.length;k++){for(var rowValues=rows[paddockRows[k]],sampleValue=[],j=0;j<importFieldNames.length;j++){var temp={};$log.info("importFieldNames[j] "+importFieldNames[j]),temp[importFieldNames[j]]=rowValues[j],sampleValue.push(temp)}singlePaddockSoils.push(sampleValue)}var singlePaddockSoil={};_isDefined(singlePaddock.soils)&&(singlePaddockSoil=singlePaddock.soils),singlePaddockSoil.sampleResults=singlePaddockSoils,singlePaddock.soils=singlePaddockSoil,currentPaddocks[i]=singlePaddock}}}return farmData.soils=currentSoils,$log.info(" farmData.soils ",JSON.stringify(farmData.soils,null,"   ")),farmData.paddocks=currentPaddocks,farmData}var _isDefined=validations.isDefined,_isArray=validations.isArray,soilSampleConverter=(validations.isEmpty,{});return soilSampleConverter.createDefault=createDefault,soilSampleConverter.toFarmData=toFarmData,soilSampleConverter}),angular.module("farmbuild.soilSampleImporter").factory("soilSampleValidator",function($log,farmdata,validations){{var soilSampleValidator={},_isDefined=validations.isDefined;validations.isArray}return soilSampleValidator.isValidFarmDataWithSoilSample=function(farmData){var soils=farmData.soils;if(!_isDefined(soils))return!1;var soilSampleResults=soils.sampleResults;if(!_isDefined(soilSampleResults))return!1;var dateLastUpdated=soilSampleResults.dateLastUpdated;if(!_isDefined(dateLastUpdated))return!1;var importFieldNames=soilSampleResults.importFieldNames;if(!_isDefined(importFieldNames))return!1;if(!_isDefined(farmData.paddocks))return!1;var paddocks=farmData.paddocks[0];return _isDefined(paddocks.soils)?!0:!1},soilSampleValidator.isValidSoilSampleResult=function(soilSampleResult){var results=soilSampleResult.results;if(!_isDefined(results))return!1;var columnHeaders=results.columnHeaders;if(!_isDefined(columnHeaders))return!1;var rowsData=results.rows;if(!_isDefined(rowsData))return!1;if(!_isDefined(soilSampleResult.importFieldDictionary))return!1;if(!_isDefined(soilSampleResult.paddockRowDictionary))return!1;var numberOfPaddocks=Object.keys(soilSampleResult.paddockRowDictionary).length;if($log.info("numberOfPaddocks "+numberOfPaddocks),!(numberOfPaddocks>0))return!1;var totalCSVColumns=columnHeaders.length;$log.info("Columns in the column headers key "+totalCSVColumns);for(var i=0;i<rowsData.length;i++){var singleRow=rowsData[i];if(singleRow.length!=totalCSVColumns)return $log.error("The "+i+" row with paddick name "+singleRow[0]+" doesn't have required number of columns"),!1}return!0},soilSampleValidator}),angular.module("farmbuild.soilSampleImporter").factory("googleAnalyticsImporter",function($log,validations,googleAnalytics){{var googleAnalyticsImporter={},api="farmbuild-dairy-nutrient-calculator";validations.isDefined}return googleAnalyticsImporter.track=function(clientName){$log.info("googleAnalyticsImporter.track clientName: %s",clientName),googleAnalytics.track(api,clientName)},googleAnalyticsImporter}),angular.module("farmbuild.soilSampleImporter").constant("importFieldDefaults",{types:[{name:"Sample Id",soilClassificationName:void 0},{name:"Sample Name",soilClassificationName:void 0},{name:"pH H2O (Water)",soilClassificationName:"pH H2O (Water)"},{name:"Olsen Phosphorus (mg/kg)",soilClassificationName:"Olsen Phosphorus (mg/kg)"},{name:"PBI",soilClassificationName:"PBI"},{name:"KCl 40 Sulphur (mg/kg)",soilClassificationName:"KCl 40 Sulphur (mg/kg)"},{name:"Colwell Phosphorus (mg/kg)",soilClassificationName:"Colwell Phosphorus (mg/kg)"},{name:"Colwell Potassium (mg/kg)",soilClassificationName:"Colwell Potassium (mg/kg)"}]}),angular.module("farmbuild.soilSampleImporter").factory("importFieldTypes",function(collections,validations,importFieldDefaults,$log){function _create(name){var type={name:name};return type}function _validate(type){$log.info("validating type  ...",type);var valid=!_isEmpty(type)&&!_isEmpty(type.name);return valid||$log.error("invalid type: %j",type),valid}function _add(types,name){var type=_create(name);return $log.info("adding a type ...",type),_validate(type)?collections.add(types,type):void 0}var importFieldTypes,_isEmpty=(validations.isPositiveNumber,validations.isPositiveNumberOrZero,validations.isEmpty),_types=(validations.isDefined,angular.copy(importFieldDefaults.types));return importFieldTypes={add:_add,at:function(index){return collections.at(_types,index)},size:function(){return collections.size(_types)},byName:function(name){return collections.byProperty(_types,"name",name)},toArray:function(){return angular.copy(_types)},removeAt:function(index){return collections.removeAt(_types,index)},last:function(){return collections.last(_types)},validate:_validate,create:_create}}),angular.module("farmbuild.soilSampleImporter").factory("importFieldSelector",function($log,farmdata,soilSampleImporter,importFieldTypes,collections,importFieldSelectionValidator){function _findPaddockWithName(paddocks,name){for(var i=0;i<paddocks.length;i++)if(name.trim().toUpperCase()==paddocks[i].name.toUpperCase())return paddocks[i];return void 0}$log.info("importFieldSelector ");var importFieldSelector={},_paddocks=[],_types=importFieldTypes.toArray();return importFieldSelector.createNew=function(myFarmData,columnHeaders,rows,paddockColumnIndex){if(!importFieldSelectionValidator.validateCreateNew(columnHeaders,rows))return void 0;if(0>paddockColumnIndex||paddockColumnIndex>=columnHeaders.length)return void 0;collections.add(columnHeaders,"Farm Paddock Name",paddockColumnIndex);for(var i=0;i<rows.length;i++)collections.add(rows[i],"",paddockColumnIndex);_paddocks=myFarmData.paddocks,importFieldSelector.paddocks=_paddocks;var result={dateLastUpdated:new Date,results:{columnHeaders:columnHeaders,rows:rows},importFieldDictionary:{},paddockRowDictionary:{},paddockNameColumn:paddockColumnIndex};return result},importFieldSelector.validate=importFieldSelectionValidator.validateImportFieldsDefinition,importFieldSelector.save=function(myFarmData,importFieldsDefinition){if($log.info(JSON.stringify(importFieldsDefinition)),!importFieldSelectionValidator.validateImportFieldsDefinition(importFieldsDefinition))return void 0;for(var key in importFieldsDefinition.paddockRowDictionary)for(var i=0;i<importFieldsDefinition.paddockRowDictionary[key].length;i++){var rowIndex=importFieldsDefinition.paddockRowDictionary[key][i];importFieldsDefinition.results.rows[rowIndex][importFieldsDefinition.paddockNameColumn]=key}return $log.info(JSON.stringify(importFieldsDefinition)),soilSampleImporter.toFarmData(myFarmData,importFieldsDefinition)},importFieldSelector.autoLinkPaddock=function(importFieldsDefinition,linkColumnIndex){var linkedCount=0;if(linkColumnIndex!=importFieldsDefinition.paddockNameColumn){for(var mappedPaddock=Object.keys(importFieldsDefinition.paddockRowDictionary),mappedRowIndex=[],i=0;i<mappedPaddock.length;i++)mappedRowIndex=mappedRowIndex.concat(importFieldsDefinition.paddockRowDictionary[mappedPaddock[i]]);for(var i=0;i<importFieldsDefinition.results.rows.length;i++)if(mappedRowIndex.indexOf(i)<0){var paddock=_findPaddockWithName(_paddocks,importFieldsDefinition.results.rows[i][linkColumnIndex]);paddock&&(this.connectRow(importFieldsDefinition,paddock,i),linkedCount++)}return linkedCount}},importFieldSelector.connectRow=function(paddockSelection,paddock,rowIndex){paddockSelection.paddockRowDictionary.hasOwnProperty(paddock.name)||(paddockSelection.paddockRowDictionary[paddock.name]=[]),collections.add(paddockSelection.paddockRowDictionary[paddock.name],rowIndex)},importFieldSelector.disconnectRow=function(paddockSelection,paddock,index){paddockSelection.paddockRowDictionary.hasOwnProperty(paddock.name)&&collections.remove(paddockSelection.paddockRowDictionary[paddock.name],index)},importFieldSelector.resetPaddockRowDictionary=function(paddockSelection){return paddockSelection.paddockRowDictionary={},paddockSelection},importFieldSelector.classifyColumn=function(paddockSelection,classificationType,index){paddockSelection.importFieldDictionary[classificationType.name]=index,$log.info("paddockSelection "+JSON.stringify(paddockSelection))},importFieldSelector.declassifyColumn=function(paddockSelection,classificationType,index){delete paddockSelection.importFieldDictionary[classificationType.name]},importFieldSelector.types=_types,importFieldSelector.paddocks=_paddocks,importFieldSelector}),angular.module("farmbuild.soilSampleImporter").factory("importFieldSelectionValidator",function($log,validations,importFieldTypes){function _isEmptyObject(obj){var name;for(name in obj)return!1;return!0}var importFieldSelectionValidator={};return importFieldSelectionValidator.validateCreateNew=function(columnHeaders,rows){if(!validations.isDefined(columnHeaders)||0==columnHeaders.length)return $log.error("Soil import column headers must be a valid array"),!1;if(!validations.isDefined(rows)||0==rows.length)return $log.error("Soil import data row must be a valid array"),!1;for(var i=0;i<rows.length;i++){var aRow=rows[i];if(aRow.length!=columnHeaders.length)return!1}return!0},importFieldSelectionValidator.validateImportFieldsDefinition=function(importFieldsDefinition){return validations.isEmpty(importFieldsDefinition.paddockRowDictionary)||_isEmptyObject(importFieldsDefinition.paddockRowDictionary)?!1:($log.info("importFieldTypes ",JSON.stringify(importFieldTypes.toArray())),importFieldTypes.toArray().length!=Object.keys(importFieldsDefinition.importFieldDictionary).length?!1:!0)},importFieldSelectionValidator}),angular.module("farmbuild.soilSampleImporter").factory("soilSampleImporterSession",function($log,farmdata,validations){function load(){var root=farmdata.session.find();return _isDefined(root)?root.soilSampleImporter:void 0}function save(toSave){var farmData=farmdata.session.find();return _isDefined(farmData)?(farmData.dateLastUpdated=new Date,farmData.soilSampleImporter=toSave,farmdata.session.save(farmData),toSave):void $log.error("Unable to find the farmData in the session!")}var soilSampleImporterSession={},_isDefined=validations.isDefined;return soilSampleImporterSession.saveSection=function(section,value){var loaded=load();return _isDefined(loaded)?(loaded[section]=value,save(loaded)):($log.error("Unable to find an existing farmData! please create then save."),soilSampleImporterSession)},soilSampleImporterSession.save=save,soilSampleImporterSession.loadSection=function(section){var loaded=load();return loaded?loaded[section]:null},soilSampleImporterSession.isLoadFlagSet=function(location){var load=!1;return location.href.split("?").length>1&&0===location.href.split("?")[1].indexOf("load")&&(load="true"===location.href.split("?")[1].split("=")[1]),load},soilSampleImporterSession.find=function(){return farmdata.session.find()},soilSampleImporterSession["export"]=function(document,farmData){return farmdata.session["export"](document,save(farmData))},soilSampleImporterSession}),angular.module("farmbuild.soilSampleImporter").constant("soilClassificationDefaults",{types:[{name:"pH H2O (Water)",ranges:[{name:["Very Acidic","Acidic","Slightly Acidic","Neutral"],min:[void 0,5.2,5.5,6.1],max:[5.2,5.5,6.1,void 0],defaultColor:["#fffe03","#96cf4c","#96cf4c","#aba3cc"]}]},{name:"Olsen Phosphorus (mg/kg)",ranges:[{name:["Deficient","Marginal","Adequate","High","Very High"],min:[void 0,9,14,20,27],max:[9,14,20,27,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]}]},{name:"PBI",ranges:[{name:["Very Sandy","Sand, Sandy Loams","Sandy/Silty Loams","Sandy/Silty Clay Loams","Clay Loams","Clay Loams & Clay","Volcanic Clay & Peat"],min:[void 0,15,35,70,140,280,840],max:[15,35,70,140,280,840,void 0],defaultColor:[void 0,void 0,void 0,void 0,void 0,void 0,void 0]}]},{name:"KCl 40 Sulphur (mg/kg)",ranges:[{name:["Deficient","Marginal","Adequate","High","Very High"],min:[void 0,4.5,7.5,10.5,14],max:[4.5,7.5,10.5,14,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]}]},{name:"Colwell Phosphorus (mg/kg)",ranges:[{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[void 0],max:[15],defaultColor:[void 0]},min:[void 0,15,23,30,41],max:[15,23,30,41,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[15],max:[35],defaultColor:[void 0]},min:[void 0,17,26,34,47],max:[17,26,34,47,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[35],max:[70],defaultColor:[void 0]},min:[void 0,19,30,39,53],max:[19,30,39,53,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[70],max:[140],defaultColor:[void 0]},min:[void 0,22,35,45,61],max:[22,35,45,61,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[140],max:[280],defaultColor:[void 0]},min:[void 0,26,42,54,74],max:[26,42,54,74,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[280],max:[840],defaultColor:[void 0]},min:[void 0,37,58,75,102],max:[37,58,75,102,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[840],max:[void 0],defaultColor:[void 0]},min:[void 0,50,90,120,150],max:[50,90,120,150,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]}]},{name:"Colwell Potassium (mg/kg)",ranges:[{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[void 0],max:[35],defaultColor:[void 0]},min:[void 0,70,120,170,230],max:[70,120,170,230,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[35],max:[70],defaultColor:[void 0]},min:[void 0,80,130,190,250],max:[80,130,190,250,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[70],max:[280],defaultColor:[void 0]},min:[void 0,90,130,190,260],max:[90,130,190,260,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[280],max:[void 0],defaultColor:[void 0]},min:[void 0,100,150,220,280],max:[100,150,220,280,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]}]},{name:"Exch Potassium (meq/100g)",ranges:[{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[void 0],max:[35],defaultColor:[void 0]},min:[void 0,.18,.31,.44,.6],max:[.18,.31,.44,.6,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[35],max:[70],defaultColor:[void 0]},min:[void 0,.2,.33,.49,.64],max:[.2,.33,.49,.64,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[70],max:[280],defaultColor:[void 0]},min:[void 0,.23,.33,.53,.66],max:[.23,.33,.53,.66,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]},{name:["Deficient","Marginal","Adequate","High","Very High"],dependencyRange:{name:["PBI"],min:[280],max:[void 0],defaultColor:[void 0]},min:[void 0,.26,.39,.56,.72],max:[.26,.39,.56,.72,void 0],defaultColor:["#fff6a6","#98d6ea","#9fba9b","#ffbfdc","#ff7573"]}]}]}),angular.module("farmbuild.soilSampleImporter").factory("soilClassification",function($log,soilClassificationTypes,validations){function _isWithinRange(min,max,classificationValue){return!_isDefined(min)&&_isDefined(max)?max>=classificationValue:_isDefined(min)&&_isDefined(max)?classificationValue>min&&max>=classificationValue:_isDefined(min)&&!_isDefined(max)?classificationValue>min:!1}function _findRangeIndex(minArray,maxArray,classificationValue){for(var i=0;i<minArray.length;i++)if(_isWithinRange(minArray[i],maxArray[i],classificationValue))return i;return-1}function _copyResult(classificationRange,index){if(index>=0&&index<classificationRange.name.length){var result={};return result.name=classificationRange.name[index],result.defaultColor=classificationRange.defaultColor[index],result}return void 0}function _isValidType(anObject){try{if(_isDefined(anObject)&&_isDefined(anObject.name)&&_isDefined(anObject.ranges))return!0}catch(err){}return!1}$log.info("soilClassification ");var soilClassification={},_isDefined=validations.isDefined;return soilClassification.findRange=function(classificationType,classificationValue){if(!_isValidType(classificationType))return void 0;for(var i=0;i<classificationType.ranges.length;i++){var aRange=classificationType.ranges[i],index=_findRangeIndex(aRange.min,aRange.max,classificationValue);if(index>=0)return _copyResult(aRange,index)}return void 0},soilClassification.findRangeWithDependency=function(classificationType,classificationValue,dependencyValue){if(!_isValidType(classificationType))return void 0;for(var i=0;i<classificationType.ranges.length;i++){var aRange=classificationType.ranges[i];if(_findRangeIndex(aRange.dependencyRange.min,aRange.dependencyRange.max,dependencyValue)>=0){var index=_findRangeIndex(aRange.min,aRange.max,classificationValue);return index>=0?_copyResult(aRange,index):void 0}}return void 0},soilClassification}),angular.module("farmbuild.soilSampleImporter").factory("soilClassificationTypes",function(collections,validations,soilClassificationDefaults,$log){function _create(name){var type={name:name};return type}function _validate(type){$log.info("validating type  ...",type);var valid=!_isEmpty(type)&&!_isEmpty(type.name);return valid||$log.error("invalid type: %j",type),valid}function _add(types,name){var type=_create(name);return $log.info("adding a type ...",type),_validate(type)?collections.add(types,type):void 0}var soilClassificationTypes,_isEmpty=(validations.isPositiveNumber,validations.isPositiveNumberOrZero,validations.isEmpty),_types=(validations.isDefined,angular.copy(soilClassificationDefaults.types));return soilClassificationTypes={add:_add,at:function(index){return collections.at(_types,index)},size:function(){return collections.size(_types)},byName:function(name){return collections.byProperty(_types,"name",name)},toArray:function(){return angular.copy(_types)},removeAt:function(index){return collections.removeAt(_types,index)},last:function(){return collections.last(_types)},validate:_validate,create:_create}}),angular.module("farmbuild.soilSampleImporter").run(function(soilSampleImporter){}),angular.injector(["ng","farmbuild.soilSampleImporter"]);
//# sourceMappingURL=farmbuild-nutrientcalculator.min.js.map